#!/bin/bash

# Create trace plots of the potential energy and chain variables
# in addition to autocorrelation plots from the output of 
# chainBundle::computeSummaryStats() with gnuplot

# Create a trace plot
function createTrace
{

gnuplot --persist << END

set title 'Chain Trace'
unset key

set xlabel 'Sample'
set xtics nomirror

set ylabel '$name'
set ytics nomirror

stats "$inputFile" using $c every :::1::2 nooutput
set yrange[STATS_min - 2 * STATS_stddev : STATS_max + 2 * STATS_stddev]

# Plot mean and standard deviation bounds
set label 1 gprintf('Mean = %g', STATS_mean) at graph 0.05, first STATS_min - STATS_stddev
set label 2 gprintf('Standard Deviation = %g', STATS_stddev) at graph 0.05, first STATS_min - 1.5 * STATS_stddev

# Plot trace with summary statistics
plot STATS_mean - STATS_stddev with filledcurves y1=STATS_mean+STATS_stddev lt 1 lc rgb '#bbbbdd', \\
STATS_mean with lines lt 3 lw 2, \\
'$inputFile' using 1:$c every :::1::2 with points pt 7 lt 1 ps 1.25

END

}

# Create an autocorrelation plot
function createAutocorr
{

gnuplot --persist << END

set title '$name'
unset key

set xlabel 'Lag'
set xtics nomirror

set ylabel 'Autocorrelation'
set ytics nomirror

w = $whitenoise

# Plot sample autocorrelation with white noise estimate
plot -w with filledcurves y1=w lt 1 lc rgb '#bbbbdd', \\
0 with lines lt 3 lw 2 lc rgb 'blue', \\
'$inputFile' using 1:$c every :::2::3 with points pt 7 lt 1 ps 1.5 lc rgb 'red', \\
'$inputFile' using 1:(\$$c>w && \$1>0 ? \$$c : 1/0) every :::2::3 with points pt 6 lt 1 ps 2.5 lc rgb 'red'

set xrange [GPVAL_DATA_X_MIN - 1 : GPVAL_DATA_X_MAX + 1]
set yrange [GPVAL_DATA_Y_MIN < -2 * w ? 1.2 * GPVAL_DATA_Y_MIN : -2 * w: 1.2 * GPVAL_DATA_Y_MAX]
replot

END

}

# Check for input file
inputFile=$1

if [ "$inputFile" == "" ]; then
echo "Input file not specified!"
exit
fi

if [ ! -e $inputFile ]; then
echo "Input file \"$inputFile\" not found!"
exit
fi

# Check for gnuplot
if [ "`which gnuplot`" == "" ]; then
echo "gnuplot not found in $PATH!"
exit
fi

# Parse trace info and create plots
dim=`grep 'DIM' $inputFile | sed 's,^DIM ,,'`

name=Potential
c=2
createTrace

i=0
while [ $i -lt $dim ]; do
name=Variable$i
let c=$i+3  
createTrace
let ++i
done

# Parse autocorrelation info and create plots
whitenoise=`grep 'WHITENOISE' $inputFile | sed 's,^WHITENOISE ,,'`

i=0
while [ $i -lt $dim ]; do
name=Variable$i
let c=$i+2
createAutocorr
let ++i
done

exit
